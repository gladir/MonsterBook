CREATE TABLE Instr6502 (
   Method     BYTE,
   ShortName  VARCHAR,
   LongName   VARCHAR
);

CREATE INDEX;

INSERT INTO Instr6502 VALUES (0,  'BRK','Software break');          // [00h]
INSERT INTO Instr6502 VALUES (8,  'ORA','OR accumulator w/memory'); // [01h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [02h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [03h]
INSERT INTO Instr6502 VALUES (1,  'TSB','Test/set bits w/acc.');    // [04h]
INSERT INTO Instr6502 VALUES (1,  'ORA','OR accumulator w/memory'); // [05h]
INSERT INTO Instr6502 VALUES (1,  'ASL','Shift memory/acc. left');  // [06h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [07h]
INSERT INTO Instr6502 VALUES (0,  'PHP','Push processor status');   // [08h]
INSERT INTO Instr6502 VALUES (4,  'ORA','OR accumulator w/memory'); // [09h]
INSERT INTO Instr6502 VALUES (0,  'ASL','Shift memory/acc. left');  // [0Ah]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [0Bh]
INSERT INTO Instr6502 VALUES (2,  'TSB','Test/set bits w/acc.');    // [0Ch]
INSERT INTO Instr6502 VALUES (2,  'ORA','OR accumulator w/memory'); // [0Dh]
INSERT INTO Instr6502 VALUES (2,  'ASL','Shift memory/acc. left');  // [0Eh]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [0Fh]
INSERT INTO Instr6502 VALUES (10, 'BPL','Branch if plus');          // [10h]
INSERT INTO Instr6502 VALUES (9,  'ORA','OR accumulator w/memory'); // [11h]
INSERT INTO Instr6502 VALUES (11, 'ORA','OR accumulator w/memory'); // [12h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [13h]
INSERT INTO Instr6502 VALUES (1,  'TRB','Test/reset bits w/acc.');  // [14h]
INSERT INTO Instr6502 VALUES (12, 'ORA','OR accumulator w/memory'); // [15h]
INSERT INTO Instr6502 VALUES (12, 'ASL','Shift memory/acc. left');  // [16h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [17h]
INSERT INTO Instr6502 VALUES (0,  'CLC','Clear carry');             // [18h]
INSERT INTO Instr6502 VALUES (6,  'ORA','OR accumulator w/memory'); // [19h]
INSERT INTO Instr6502 VALUES (0,  'INC','Increment');               // [1Ah]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [1Bh]
INSERT INTO Instr6502 VALUES (2,  'TRB','Test/reset bits w/acc.');  // [1Ch]
INSERT INTO Instr6502 VALUES (13, 'ORA','OR accumulator w/memory'); // [1Dh]
INSERT INTO Instr6502 VALUES (13, 'ASL','Shift memory/acc. left');  // [1Eh]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [1Fh]

INSERT INTO Instr6502 VALUES (2,  'JSR','Jump to subroutine');      // [20h]
INSERT INTO Instr6502 VALUES (8,  'AND','AND accumulator w/memory');// [21h]
INSERT INTO Instr6502 VALUES (1,  'BIT','Test bits w/accumulator'); // [22h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [23h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // ®24h¯
INSERT INTO Instr6502 VALUES (1,  'AND','AND accumulator w/memory');// [25h]
INSERT INTO Instr6502 VALUES (1,  'ROL','Rotate memory/acc. left'); // [26h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [27h]
INSERT INTO Instr6502 VALUES (0,  'PLP','Pull processor status');   // [28h]
INSERT INTO Instr6502 VALUES (4,  'AND','AND accumulator w/memory');// [29h]
INSERT INTO Instr6502 VALUES (0,  'ROL','Rotate memory/acc. left'); // [2Ah]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [2Bh]
INSERT INTO Instr6502 VALUES (2,  'BIT','Test bits w/accumulator'); // [2Ch]
INSERT INTO Instr6502 VALUES (2,  'AND','AND accumulator w/memory');// [2Dh]
INSERT INTO Instr6502 VALUES (2,  'ROL','Rotate memory/acc. left'); // [2Eh]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [2Fh]
INSERT INTO Instr6502 VALUES (10, 'BMI','Branch if minus');         // [30h]
INSERT INTO Instr6502 VALUES (9,  'AND','AND accumulator w/memory');// [31h]
INSERT INTO Instr6502 VALUES (11, 'AND','AND accumulator w/memory');// [32h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [33h]
INSERT INTO Instr6502 VALUES (12, 'BIT','Test bits w/accumulator'); // [34h]
INSERT INTO Instr6502 VALUES (12, 'AND','AND accumulator w/memory');// [35h]
INSERT INTO Instr6502 VALUES (12, 'ROL','Rotate memory/acc. left'); // [36h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [37h]
INSERT INTO Instr6502 VALUES (0,  'SEC','Set carry');               // [38h]
INSERT INTO Instr6502 VALUES (6,  'AND','AND accumulator w/memory');// [39h]
INSERT INTO Instr6502 VALUES (0,  'DEC','Decrement');               // [3Ah]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [3Bh]
INSERT INTO Instr6502 VALUES (13, 'BIT','Test bits w/accumulator'); // [3Ch]
INSERT INTO Instr6502 VALUES (13, 'AND','AND accumulator w/memory');// [3Dh]
INSERT INTO Instr6502 VALUES (13, 'ROL','Rotate memory/acc. left'); // [3Eh]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [3Fh]

INSERT INTO Instr6502 VALUES (0,  'RTI','Return from interrupt');   // [40h]
INSERT INTO Instr6502 VALUES (8,  'EOR','XOR accumulator w/memory');// [41h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [42h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [43h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // ®44h¯
INSERT INTO Instr6502 VALUES (1,  'EOR','XOR accumulator w/memory');// [45h]
INSERT INTO Instr6502 VALUES (1,  'LSR','Logical shift right');     // [46h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [47h]
INSERT INTO Instr6502 VALUES (0,  'PHA','Push accumulator');        // [48h]
INSERT INTO Instr6502 VALUES (4,  'EOR','XOR accumulator w/memory');// [49h]
INSERT INTO Instr6502 VALUES (0,  'LSR','Logical shift right');     // [4Ah]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [4Bh]
INSERT INTO Instr6502 VALUES (2,  'JMP','Jump');                    // [4Ch]
INSERT INTO Instr6502 VALUES (2,  'EOR','XOR accumulator w/memory');// [4Dh]
INSERT INTO Instr6502 VALUES (2,  'LSR','Logical shift right');     // [4Eh]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [4Fh]
INSERT INTO Instr6502 VALUES (10, 'BVC','Branch if overflow clear');// [50h]
INSERT INTO Instr6502 VALUES (9,  'EOR','XOR accumulator w/memory');// [51h]
INSERT INTO Instr6502 VALUES (11, 'EOR','XOR accumulator w/memory');// [52h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [53h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // ®54h¯
INSERT INTO Instr6502 VALUES (12, 'EOR','XOR accumulator w/memory');// [55h]
INSERT INTO Instr6502 VALUES (12, 'LSR','Logical shift right');     // [56h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [57h]
INSERT INTO Instr6502 VALUES (0,  'CLI','Clear interrupt disable'); // [58h]
INSERT INTO Instr6502 VALUES (6,  'EOR','XOR accumulator w/memory');// [59h]
INSERT INTO Instr6502 VALUES (0,  'PHY','Push Y index register');   // [5Ah]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [5Bh]
INSERT INTO Instr6502 VALUES (0,  '','');                           // ®5Ch¯
INSERT INTO Instr6502 VALUES (13, 'EOR','XOR accumulator w/memory');// [5Dh]
INSERT INTO Instr6502 VALUES (13, 'LSR','Logical shift right');     // [5Eh]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [5Fh]

INSERT INTO Instr6502 VALUES (0,  'RTS','Return from subroutine');  // [60h]
INSERT INTO Instr6502 VALUES (8,  'ADC','Add with carry');          // [61h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [62h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [63h]
INSERT INTO Instr6502 VALUES (1,  'STZ','Store zero to memory');    // [64h]
INSERT INTO Instr6502 VALUES (1,  'ADC','Add with carry');          // [65h]
INSERT INTO Instr6502 VALUES (1,  'ROR','Rotate memory/acc. right');// [66h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [67h]
INSERT INTO Instr6502 VALUES (0,  'PLA','Pull accumulator');        // [68h]
INSERT INTO Instr6502 VALUES (4,  'ADC','Add with carry');          // [69h]
INSERT INTO Instr6502 VALUES (0,  'ROR','Rotate memory/acc. right');// [6Ah]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [6Bh]
INSERT INTO Instr6502 VALUES (3,  'JMP','Jump');                    // [6Ch]
INSERT INTO Instr6502 VALUES (2,  'ADC','Add with carry');          // [6Dh]
INSERT INTO Instr6502 VALUES (2,  'ROR','Rotate memory/acc. right');// [6Eh]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [6Fh]
INSERT INTO Instr6502 VALUES (10, 'BVS','Branch if overflow set');  // [70h]
INSERT INTO Instr6502 VALUES (9,  'ADC','Add with carry');          // [71h]
INSERT INTO Instr6502 VALUES (11, 'ADC','Add with carry');          // [72h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [73h]
INSERT INTO Instr6502 VALUES (12, 'STZ','Store zero to memory');    // [74h]
INSERT INTO Instr6502 VALUES (12, 'ADC','Add with carry');          // [75h]
INSERT INTO Instr6502 VALUES (12, 'ROR','Rotate memory/acc. right');// [76h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [77h]
INSERT INTO Instr6502 VALUES (0,  'SEI','Set interrupt disable');   // [78h]
INSERT INTO Instr6502 VALUES (6,  'ADC','Add with carry');          // [79h]
INSERT INTO Instr6502 VALUES (0,  'PLY','Pull Y index register');   // [7Ah]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [7Bh]
INSERT INTO Instr6502 VALUES (13, 'JMP','Jump');                    // [7Ch]
INSERT INTO Instr6502 VALUES (13, 'ADC','Add with carry');          // [7Dh]
INSERT INTO Instr6502 VALUES (13, 'ROR','Rotate memory/acc. right');// [7Eh]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [7Fh]

INSERT INTO Instr6502 VALUES (0,  'BRA','Branch always');           // [80h]
INSERT INTO Instr6502 VALUES (8,  'STA','Store accumulator');       // [81h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [82h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [83h]
INSERT INTO Instr6502 VALUES (1,  'STY','Store Y index register');  // [84h]
INSERT INTO Instr6502 VALUES (1,  'STA','Store accumulator');       // [85h]
INSERT INTO Instr6502 VALUES (1,  'STX','Store X index register');  // [86h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [87h]
INSERT INTO Instr6502 VALUES (0,  'DEY','Decrement Y register');    // [88h]
INSERT INTO Instr6502 VALUES (4,  'BIT','Test bits w/accumulator'); // [89h]
INSERT INTO Instr6502 VALUES (0,  'TXA','Transfer X reg. to acc.'); // [8Ah]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [8Bh]
INSERT INTO Instr6502 VALUES (2,  'STY','Store Y index register');  // [8Ch]
INSERT INTO Instr6502 VALUES (2,  'STA','Store accumulator');       // [8Dh]
INSERT INTO Instr6502 VALUES (2,  'STX','Store X index register');  // [8Eh]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [8Fh]
INSERT INTO Instr6502 VALUES (10, 'BCC','Branch if carry clear');   // [90h]
INSERT INTO Instr6502 VALUES (9,  'STA','Store accumulator');       // [91h]
INSERT INTO Instr6502 VALUES (11, 'STA','Store accumulator');       // [92h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [93h]
INSERT INTO Instr6502 VALUES (12, 'STY','Store Y index register');  // [94h]
INSERT INTO Instr6502 VALUES (12, 'STA','Store accumulator');       // [95h]
INSERT INTO Instr6502 VALUES (12, 'STX','Store X index register');  // [96h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [97h]
INSERT INTO Instr6502 VALUES (0,  'TYA','Transfer Y reg. to acc.'); // [98h]
INSERT INTO Instr6502 VALUES (6,  'STA','Store accumulator');       // [99h]
INSERT INTO Instr6502 VALUES (0,  'TXS','Transfer X reg. to stack');// [9Ah]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [9Bh]
INSERT INTO Instr6502 VALUES (2,  'STZ','Store zero to memory');    // [9Ch]
INSERT INTO Instr6502 VALUES (13, 'STA','Store accumulator');       // [9Dh]
INSERT INTO Instr6502 VALUES (13, 'STZ','Store zero to memory');    // [9Eh]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [9Fh]

INSERT INTO Instr6502 VALUES (4,  'LDY','Load Y register w/memory');// [A0h]
INSERT INTO Instr6502 VALUES (8,  'LDA','Load accumulator w/memory');//[A1h]
INSERT INTO Instr6502 VALUES (4,  'LDX','Load X register w/memory');// [A2h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [A3h]
INSERT INTO Instr6502 VALUES (1,  'LDY','Load Y register w/memory');// [A4h]
INSERT INTO Instr6502 VALUES (1,  'LDA','Load accumulator w/memory');//[A5h]
INSERT INTO Instr6502 VALUES (1,  'LDX','Load X register w/memory');// [A6h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [A7h]
INSERT INTO Instr6502 VALUES (0,  'TAY','Transfer acc. to Y reg.'); // [A8h]
INSERT INTO Instr6502 VALUES (4,  'LDA','Load accumulator w/memory');//[A9h]
INSERT INTO Instr6502 VALUES (0,  'TAX','Transfer acc. to X reg.'); // [AAh]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [ABh]
INSERT INTO Instr6502 VALUES (2,  'LDY','Load Y register w/memory');// [ACh]
INSERT INTO Instr6502 VALUES (2,  'LDA','Load accumulator w/memory');//[ADh]
INSERT INTO Instr6502 VALUES (2,  'LDX','Load X register w/memory');// [AEh]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [AFh]
INSERT INTO Instr6502 VALUES (10, 'BCS','Branch if carry set');     // [B0h]
INSERT INTO Instr6502 VALUES (9,  'LDA','Load accumulator w/memory');//[B1h]
INSERT INTO Instr6502 VALUES (11, 'LDA','Load accumulator w/memory');//[B2h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [B3h]
INSERT INTO Instr6502 VALUES (12, 'LDY','Load Y register w/memory');// [B4h]
INSERT INTO Instr6502 VALUES (12, 'LDA','Load accumulator w/memory');//[B5h]
INSERT INTO Instr6502 VALUES (5,  'LDX','Load X register w/memory');// [B6h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [B7h]
INSERT INTO Instr6502 VALUES (0,  'CLV','Clear overflow');          // [B8h]
INSERT INTO Instr6502 VALUES (6,  'LDA','Load accumulator w/memory');//[B9h]
INSERT INTO Instr6502 VALUES (0,  'TSX','Transfer stack to X reg.');// [BAh]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [BBh]
INSERT INTO Instr6502 VALUES (13, 'LDY','Load Y register w/memory');// [BCh]
INSERT INTO Instr6502 VALUES (13, 'LDA','Load accumulator w/memory');//[BDh]
INSERT INTO Instr6502 VALUES (6,  'LDX','Load X register w/memory');// [BEh]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [BFh]

INSERT INTO Instr6502 VALUES (4,  'CPY','Compare Y reg. w/memory'); // [C0h]
INSERT INTO Instr6502 VALUES (8,  'CMP','Compare memory w/acc.');   // [C1h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [C2h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [C3h]
INSERT INTO Instr6502 VALUES (1,  'CPY','Compare Y reg. w/memory'); // [C4h]
INSERT INTO Instr6502 VALUES (1,  'CMP','Compare memory w/acc.');   // [C5h]
INSERT INTO Instr6502 VALUES (1,  'DEC','Decrement');               // [C6h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [C7h]
INSERT INTO Instr6502 VALUES (0,  'INY','Increment Y register');    // [C8h]
INSERT INTO Instr6502 VALUES (4,  'CMP','Compare memory w/acc.');   // [C9h]
INSERT INTO Instr6502 VALUES (0,  'DEX','Decrement X register');    // [CAh]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [CBh]
INSERT INTO Instr6502 VALUES (2,  'CPY','Compare Y reg. w/memory'); // [CCh]
INSERT INTO Instr6502 VALUES (2,  'CMP','Compare memory w/acc.');   // [CDh]
INSERT INTO Instr6502 VALUES (2,  'DEC','Decrement');               // [CEh]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [CFh]
INSERT INTO Instr6502 VALUES (10, 'BNE','Branch if not equal');     // [D0h]
INSERT INTO Instr6502 VALUES (9,  'CMP','Compare memory w/acc.');   // [D1h]
INSERT INTO Instr6502 VALUES (11, 'CMP','Compare memory w/acc.');   // [D2h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [D3h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // ®D4h¯
INSERT INTO Instr6502 VALUES (12, 'CMP','Compare memory w/acc.');   // [D5h]
INSERT INTO Instr6502 VALUES (12, 'DEC','Decrement');               // [D6h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [D7h]
INSERT INTO Instr6502 VALUES (0,  'CLD','Clear decimal mode');      // [D8h]
INSERT INTO Instr6502 VALUES (6,  'CMP','Compare memory w/acc.');   // [D9h]
INSERT INTO Instr6502 VALUES (0,  'PHX','Push X index register');   // [DAh]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [DBh]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [DCh]
INSERT INTO Instr6502 VALUES (13, 'CMP','Compare memory w/acc.');   // [DDh]
INSERT INTO Instr6502 VALUES (13, 'DEC','Decrement');               // [DEh]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [DFh]

INSERT INTO Instr6502 VALUES (4,  'CPX','Compare X reg. w/memory'); // [E0h]
INSERT INTO Instr6502 VALUES (8,  'SBC','Subtract from accumulator');//[E1h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [E2h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [E3h]
INSERT INTO Instr6502 VALUES (1,  'CPX','Compare X reg. w/memory'); // [E4h]
INSERT INTO Instr6502 VALUES (1,  'SBC','Subtract from accumulator');//[E5h]
INSERT INTO Instr6502 VALUES (1,  'INC','Increment');               // [E6h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [E7h]
INSERT INTO Instr6502 VALUES (0,  'INX','Increment X register');    // [E8h]
INSERT INTO Instr6502 VALUES (4,  'SBC','Subtract from accumulator');//[E9h]
INSERT INTO Instr6502 VALUES (0,  'NOP','No operation');            // [EAh]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [EBh]
INSERT INTO Instr6502 VALUES (2,  'CPX','Compare X reg. w/memory'); // [ECh]
INSERT INTO Instr6502 VALUES (2,  'SBC','Subtract from accumulator');//[EDh]
INSERT INTO Instr6502 VALUES (2,  'INC','Increment');               // [EEh]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [EFh]
INSERT INTO Instr6502 VALUES (10, 'BEQ','Branch if equal');         // [F0h]
INSERT INTO Instr6502 VALUES (9,  'SBC','Subtract from accumulator');//[F1h]
INSERT INTO Instr6502 VALUES (11, 'SBC','Subtract from accumulator');//[F2h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [F3h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // ®F4h¯
INSERT INTO Instr6502 VALUES (12, 'SBC','Subtract from accumulator');//[F5h]
INSERT INTO Instr6502 VALUES (12, 'INC','Increment');               // [F6h]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [F7h]
INSERT INTO Instr6502 VALUES (0,  'SED','Set decimal mode');        // [F8h]
INSERT INTO Instr6502 VALUES (6,  'SBC','Subtract from accumulator');//[F9h]
INSERT INTO Instr6502 VALUES (0,  'PLX','Pull X index register');   // [FAh]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [FBh]
INSERT INTO Instr6502 VALUES (0,  '','');                           // ®FCh¯
INSERT INTO Instr6502 VALUES (13, 'SBC','Subtract from accumulator');//[FDh]
INSERT INTO Instr6502 VALUES (13, 'INC','Increment');               // [FEh]
INSERT INTO Instr6502 VALUES (0,  '','');                           // [FFh]
